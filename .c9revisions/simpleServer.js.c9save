{"ts":1366630240495,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var http = require('http'),\n    url = require('url'),\n    fs = require('fs'),\n    path = require('path');\n\nvar baseDir = path.dirname(require.main.filename),\n    routesDir = path.join(baseDir, 'routes/');\n\n// Start the server\nfunction start(port) {\n    http.createServer(function(req, res) {\n        var info = {};\n        info.path = url.parse(req.url).pathname;\n        info.params = [];\n        info.data = '';\n        info.method = req.method;\n    \n        // Parse POST data if any\n        if(req.method === 'POST' || req.method === 'PUT') {\n            req.on('data', function(data) {\n                info.data += data;\n            });\n        }\n        \n        // On request end, route the request\n        req.on('end', function() {\n            (info.data !== '') ? info.data = JSON.parse(info.data) : {};\n            \n            router(info, res);\n        });\n    }).listen(port);\n}\n\n// Route the request and call the appropriate action\nfunction router(info, res) {\n    if(info.path.indexOf('/static/') === 0) {\n        // Serve static files\n        serveStaticFile(info.path, res);\n    } else {\n        // Parse route (controller) and action\n        var urlParts = info.path.split('/'),\n            route = (urlParts[1]) ? urlParts[1] : 'start',\n            action = (urlParts[2]) ? urlParts[2] : 'handle';\n        \n        // Get params\n        if(urlParts.length > 3) {\n            info.params = urlParts.slice(3, urlParts.length);\n        }\n        \n        // Check if route file exists\n        fs.exists(path.join(routesDir, route +'.js'), function(exists) {\n            if(exists) {\n                var handler = require(path.join(routesDir, route));\n                    \n                // Call handler if exists\n                if(typeof handler[action] === 'function') {\n                    handler[action](info, res);\n                } else {\n                    notFound(res);\n                }\n            } else {\n                notFound(res);\n            }\n        });\n    }\n}\n\n// Serve static files\nfunction serveStaticFile(pathname, res) {\n    var file = path.join(baseDir, pathname);\n        \n    // File exists ?\n    fs.exists(file, function(exists) {\n        if(exists) {\n            // Is it a file ?\n            fs.stat(file, function(stat_err, stats) {\n                if(stats.isFile()) {\n                    // Send data back\n                    res.writeHead(200);\n                    fs.createReadStream(file).pipe(res);\n                } else {\n                    // It's not a file\n                    notFound(res);\n                }\n            });\n        } else {\n            // File not found\n            notFound(res);\n        }\n    })\n}\n\n// Return a 404 Not Found error\nfunction notFound(res) {\n    res.writeHead(404);\n    res.end('Not Found');\n}\n\nexports.start = start;"]],"start1":0,"start2":0,"length1":0,"length2":2818}]],"length":2818}
